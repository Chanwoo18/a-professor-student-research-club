{"cells":[{"cell_type":"markdown","id":"527a563a-c8b2-44f0-ae20-0d226ab1e547","metadata":{"id":"527a563a-c8b2-44f0-ae20-0d226ab1e547"},"source":["\n","+ Install MMTracking.\n","+ 사전에 훈련된 가중치로 예측실행"]},{"cell_type":"markdown","id":"ab2c382c-a169-46fe-938f-c6687d763e8e","metadata":{"id":"ab2c382c-a169-46fe-938f-c6687d763e8e"},"source":["## **Install MMTracking**"]},{"cell_type":"code","execution_count":4,"id":"f8ced8f4-b07b-4216-8953-f7af6928b77c","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f8ced8f4-b07b-4216-8953-f7af6928b77c","outputId":"5b6ede91-05e2-4cbb-86be-4e30ae4c1b2e","executionInfo":{"status":"ok","timestamp":1673250009638,"user_tz":-540,"elapsed":270,"user":{"displayName":"리미누","userId":"10960127468446100835"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["nvcc: NVIDIA (R) Cuda compiler driver\n","Copyright (c) 2005-2021 NVIDIA Corporation\n","Built on Sun_Feb_14_21:12:58_PST_2021\n","Cuda compilation tools, release 11.2, V11.2.152\n","Build cuda_11.2.r11.2/compiler.29618528_0\n","gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\n","Copyright (C) 2017 Free Software Foundation, Inc.\n","This is free software; see the source for copying conditions.  There is NO\n","warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n","\n"]}],"source":["# Check nvcc version\n","!nvcc -V\n","# Check GCC version\n","!gcc --version"]},{"cell_type":"code","execution_count":7,"id":"6b4f093f-e197-42bd-ba64-dc905e379382","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6b4f093f-e197-42bd-ba64-dc905e379382","outputId":"1592472b-4c9a-45c9-decd-a2f06173103d","executionInfo":{"status":"ok","timestamp":1673250366616,"user_tz":-540,"elapsed":28669,"user":{"displayName":"리미누","userId":"10960127468446100835"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Looking in links: https://download.openmmlab.com/mmcv/dist/cu111/torch1.8.0/index.html\n","Requirement already satisfied: mmcv-full in /usr/local/lib/python3.8/dist-packages (1.7.1)\n","Requirement already satisfied: opencv-python>=3 in /usr/local/lib/python3.8/dist-packages (from mmcv-full) (4.6.0.66)\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.8/dist-packages (from mmcv-full) (6.0)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.8/dist-packages (from mmcv-full) (1.21.6)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.8/dist-packages (from mmcv-full) (21.3)\n","Requirement already satisfied: yapf in /usr/local/lib/python3.8/dist-packages (from mmcv-full) (0.32.0)\n","Requirement already satisfied: Pillow in /usr/local/lib/python3.8/dist-packages (from mmcv-full) (7.1.2)\n","Requirement already satisfied: addict in /usr/local/lib/python3.8/dist-packages (from mmcv-full) (2.4.0)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.8/dist-packages (from packaging->mmcv-full) (3.0.9)\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: mmdet in /usr/local/lib/python3.8/dist-packages (2.27.0)\n","Requirement already satisfied: six in /usr/local/lib/python3.8/dist-packages (from mmdet) (1.15.0)\n","Requirement already satisfied: terminaltables in /usr/local/lib/python3.8/dist-packages (from mmdet) (3.1.10)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.8/dist-packages (from mmdet) (1.7.3)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.8/dist-packages (from mmdet) (1.21.6)\n","Requirement already satisfied: pycocotools in /usr/local/lib/python3.8/dist-packages (from mmdet) (2.0.6)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.8/dist-packages (from mmdet) (3.2.2)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.8/dist-packages (from matplotlib->mmdet) (1.4.4)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.8/dist-packages (from matplotlib->mmdet) (3.0.9)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.8/dist-packages (from matplotlib->mmdet) (0.11.0)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.8/dist-packages (from matplotlib->mmdet) (2.8.2)\n","Cloning into 'mmtracking'...\n","remote: Enumerating objects: 7878, done.\u001b[K\n","remote: Counting objects: 100% (148/148), done.\u001b[K\n","remote: Compressing objects: 100% (124/124), done.\u001b[K\n","remote: Total 7878 (delta 33), reused 82 (delta 21), pack-reused 7730\u001b[K\n","Receiving objects: 100% (7878/7878), 2.94 MiB | 17.01 MiB/s, done.\n","Resolving deltas: 100% (4952/4952), done.\n","/content/mmtracking/mmtracking/mmtracking\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: cython in /usr/local/lib/python3.8/dist-packages (from -r requirements/build.txt (line 1)) (0.29.32)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.8/dist-packages (from -r requirements/build.txt (line 2)) (1.21.6)\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Obtaining file:///content/mmtracking/mmtracking/mmtracking\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: attributee in /usr/local/lib/python3.8/dist-packages (from mmtrack==0.14.0) (0.1.7)\n","Requirement already satisfied: dotty_dict in /usr/local/lib/python3.8/dist-packages (from mmtrack==0.14.0) (1.3.1)\n","Requirement already satisfied: einops in /usr/local/lib/python3.8/dist-packages (from mmtrack==0.14.0) (0.6.0)\n","Requirement already satisfied: lap in /usr/local/lib/python3.8/dist-packages (from mmtrack==0.14.0) (0.4.0)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.8/dist-packages (from mmtrack==0.14.0) (3.2.2)\n","Requirement already satisfied: mmcls<1.0.0,>=0.16.0 in /usr/local/lib/python3.8/dist-packages (from mmtrack==0.14.0) (0.25.0)\n","Requirement already satisfied: motmetrics in /usr/local/lib/python3.8/dist-packages (from mmtrack==0.14.0) (1.4.0)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.8/dist-packages (from mmtrack==0.14.0) (21.3)\n","Requirement already satisfied: pandas<=1.3.5 in /usr/local/lib/python3.8/dist-packages (from mmtrack==0.14.0) (1.3.5)\n","Requirement already satisfied: pycocotools in /usr/local/lib/python3.8/dist-packages (from mmtrack==0.14.0) (2.0.6)\n","Requirement already satisfied: scipy<=1.7.3 in /usr/local/lib/python3.8/dist-packages (from mmtrack==0.14.0) (1.7.3)\n","Requirement already satisfied: seaborn in /usr/local/lib/python3.8/dist-packages (from mmtrack==0.14.0) (0.11.2)\n","Requirement already satisfied: terminaltables in /usr/local/lib/python3.8/dist-packages (from mmtrack==0.14.0) (3.1.10)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.8/dist-packages (from mmtrack==0.14.0) (4.64.1)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.8/dist-packages (from mmcls<1.0.0,>=0.16.0->mmtrack==0.14.0) (1.21.6)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.8/dist-packages (from matplotlib->mmtrack==0.14.0) (2.8.2)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.8/dist-packages (from matplotlib->mmtrack==0.14.0) (1.4.4)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.8/dist-packages (from matplotlib->mmtrack==0.14.0) (3.0.9)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.8/dist-packages (from matplotlib->mmtrack==0.14.0) (0.11.0)\n","Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.8/dist-packages (from pandas<=1.3.5->mmtrack==0.14.0) (2022.7)\n","Requirement already satisfied: xmltodict>=0.12.0 in /usr/local/lib/python3.8/dist-packages (from motmetrics->mmtrack==0.14.0) (0.13.0)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.8/dist-packages (from python-dateutil>=2.1->matplotlib->mmtrack==0.14.0) (1.15.0)\n","Installing collected packages: mmtrack\n","  Attempting uninstall: mmtrack\n","    Found existing installation: mmtrack 0.14.0\n","    Can't uninstall 'mmtrack'. No files were found to uninstall.\n","  Running setup.py develop for mmtrack\n","Successfully installed mmtrack-0.14.0\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting git+https://github.com/JonathonLuiten/TrackEval.git\n","  Cloning https://github.com/JonathonLuiten/TrackEval.git to /tmp/pip-req-build-rs41w02e\n","  Running command git clone --filter=blob:none --quiet https://github.com/JonathonLuiten/TrackEval.git /tmp/pip-req-build-rs41w02e\n","  Resolved https://github.com/JonathonLuiten/TrackEval.git to commit 12c8791b303e0a0b50f753af204249e622d0281a\n","  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n","  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n","  Preparing metadata (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: numpy in /usr/local/lib/python3.8/dist-packages (from trackeval==1.0.dev1) (1.21.6)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.8/dist-packages (from trackeval==1.0.dev1) (1.7.3)\n"]}],"source":["# install MMCV\n","!pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cu111/torch1.8.0/index.html\n","\n","# install MMDetection\n","!pip install mmdet\n","\n","# clone the MMTracking repository\n","!git clone https://github.com/open-mmlab/mmtracking.git\n","%cd mmtracking\n","\n","# install MMTracking and its dependencies\n","!pip install -r requirements/build.txt\n","!pip install -e .\n","# used to MOT evaluation\n","!pip install git+https://github.com/JonathonLuiten/TrackEval.git"]},{"cell_type":"code","execution_count":8,"id":"03a4a583-78e7-40a1-a6ef-d80056989546","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":543},"id":"03a4a583-78e7-40a1-a6ef-d80056989546","outputId":"e69947c2-25c2-40dd-ad3b-e7f2ee51ec88","executionInfo":{"status":"error","timestamp":1673250378705,"user_tz":-540,"elapsed":279,"user":{"displayName":"리미누","userId":"10960127468446100835"}}},"outputs":[{"output_type":"error","ename":"ImportError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mImportError\u001b[0m                               Traceback (most recent call last)","\u001b[0;32m<ipython-input-8-3ffd0d7d2cbc>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mmmcv\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mcollect_env\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mcollect_env\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/mmcv/utils/env.py\u001b[0m in \u001b[0;36mcollect_env\u001b[0;34m()\u001b[0m\n\u001b[1;32m    122\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    123\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 124\u001b[0;31m         \u001b[0;32mfrom\u001b[0m \u001b[0mmmcv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mops\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mget_compiler_version\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mget_compiling_cuda_version\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    125\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mModuleNotFoundError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    126\u001b[0m         \u001b[0menv_info\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'MMCV Compiler'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'n/a'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/mmcv/ops/__init__.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Copyright (c) OpenMMLab. All rights reserved.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mmmcv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mutils\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mIS_MLU_AVAILABLE\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0mactive_rotated_filter\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mactive_rotated_filter\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0massign_score_withk\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0massign_score_withk\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0mball_query\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mball_query\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/mmcv/ops/active_rotated_filter.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mutils\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mext_loader\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m ext_module = ext_loader.load_ext(\n\u001b[0m\u001b[1;32m     11\u001b[0m     \u001b[0;34m'_ext'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m     ['active_rotated_filter_forward', 'active_rotated_filter_backward'])\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/mmcv/utils/ext_loader.py\u001b[0m in \u001b[0;36mload_ext\u001b[0;34m(name, funcs)\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mload_ext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfuncs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 13\u001b[0;31m         \u001b[0mext\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mimportlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimport_module\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'mmcv.'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     14\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mfun\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mfuncs\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m             \u001b[0;32massert\u001b[0m \u001b[0mhasattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mext\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfun\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34mf'{fun} miss in module {name}'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.8/importlib/__init__.py\u001b[0m in \u001b[0;36mimport_module\u001b[0;34m(name, package)\u001b[0m\n\u001b[1;32m    125\u001b[0m                 \u001b[0;32mbreak\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    126\u001b[0m             \u001b[0mlevel\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 127\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_bootstrap\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_gcd_import\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpackage\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    128\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    129\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mImportError\u001b[0m: /usr/local/lib/python3.8/dist-packages/mmcv/_ext.cpython-38-x86_64-linux-gnu.so: undefined symbol: _ZN2at4_ops7resize_4callERKNS_6TensorEN3c108ArrayRefIlEENS5_8optionalINS5_12MemoryFormatEEE","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"],"errorDetails":{"actions":[{"action":"open_url","actionText":"Open Examples","url":"/notebooks/snippets/importing_libraries.ipynb"}]}}],"source":["from mmcv import collect_env\n","collect_env()\n"]},{"cell_type":"code","execution_count":null,"id":"ff6aea79-2ce9-4b1c-b3c4-3f92d1a4e34c","metadata":{"id":"ff6aea79-2ce9-4b1c-b3c4-3f92d1a4e34c","executionInfo":{"status":"aborted","timestamp":1673250044561,"user_tz":-540,"elapsed":20,"user":{"displayName":"리미누","userId":"10960127468446100835"}}},"outputs":[],"source":["# Check Pytorch installation\n","import torch, torchvision\n","print(torch.__version__, torch.cuda.is_available())\n","\n","# Check mmcv installation\n","from mmcv.ops import get_compiling_cuda_version, get_compiler_version\n","print(get_compiling_cuda_version())\n","print(get_compiler_version())\n","\n","# Check MMDetection installation\n","import mmdet\n","print(mmdet.__version__)\n","\n","# Check MMTracking installation\n","import mmtrack\n","print(mmtrack.__version__)"]},{"cell_type":"markdown","id":"4d43b49c-320a-4b0f-baca-fb4bde0630ff","metadata":{"id":"4d43b49c-320a-4b0f-baca-fb4bde0630ff","tags":[]},"source":["## **Perform inference**"]},{"cell_type":"code","execution_count":null,"id":"dd7c8466-f057-455f-985a-71e5f22c36e4","metadata":{"id":"dd7c8466-f057-455f-985a-71e5f22c36e4","executionInfo":{"status":"aborted","timestamp":1673250044562,"user_tz":-540,"elapsed":21,"user":{"displayName":"리미누","userId":"10960127468446100835"}}},"outputs":[],"source":["# unset the proxy for downloading the pretrained models (optional)\n","!unset https_proxy\n","!unset http_proxy\n","\n","# download checkpoints\n","!mkdir checkpoints\n","!wget -c https://download.openmmlab.com/mmtracking/vid/selsa/selsa_faster_rcnn_r50_dc5_1x_imagenetvid/selsa_faster_rcnn_r50_dc5_1x_imagenetvid_20201227_204835-2f5a4952.pth -P ./checkpoints\n","!wget -c https://download.openmmlab.com/mmtracking/sot/siamese_rpn/siamese_rpn_r50_1x_lasot/siamese_rpn_r50_1x_lasot_20211203_151612-da4b3c66.pth -P ./checkpoints\n","!wget -c https://download.openmmlab.com/mmtracking/vis/masktrack_rcnn/masktrack_rcnn_r50_fpn_12e_youtubevis2019/masktrack_rcnn_r50_fpn_12e_youtubevis2019_20211022_194830-6ca6b91e.pth -P ./checkpoints"]},{"cell_type":"code","source":["pip install mmcv"],"metadata":{"id":"z3PcNNsLMpGW","executionInfo":{"status":"aborted","timestamp":1673250044562,"user_tz":-540,"elapsed":21,"user":{"displayName":"리미누","userId":"10960127468446100835"}}},"id":"z3PcNNsLMpGW","execution_count":null,"outputs":[]},{"cell_type":"code","source":["pip install mmtrack"],"metadata":{"id":"eY834DsPM2CM","executionInfo":{"status":"aborted","timestamp":1673250044563,"user_tz":-540,"elapsed":22,"user":{"displayName":"리미누","userId":"10960127468446100835"}}},"id":"eY834DsPM2CM","execution_count":null,"outputs":[]},{"cell_type":"code","source":["pip install mmcv-full==1.3.9 -f https://download.openmmlab.com/mmcv/dist/cu101/torch1.7.0/index.html "],"metadata":{"id":"n26KzXtENFB8","executionInfo":{"status":"aborted","timestamp":1673250044563,"user_tz":-540,"elapsed":22,"user":{"displayName":"리미누","userId":"10960127468446100835"}}},"id":"n26KzXtENFB8","execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"id":"420dae4b-4426-405e-97fb-7823943b8ee8","metadata":{"id":"420dae4b-4426-405e-97fb-7823943b8ee8","executionInfo":{"status":"aborted","timestamp":1673250044564,"user_tz":-540,"elapsed":23,"user":{"displayName":"리미누","userId":"10960127468446100835"}}},"outputs":[],"source":["# run mot demo\n","import mmcv\n","import tempfile\n","from mmtrack.apis import inference_mot, init_model\n","mot_config = './configs/mot/deepsort/deepsort_faster-rcnn_fpn_4e_mot17-private-half.py'\n","input_video = './demo/demo.mp4'\n","imgs = mmcv.VideoReader(input_video)\n","# build the model from a config file\n","mot_model = init_model(mot_config, device='cuda:0')\n","prog_bar = mmcv.ProgressBar(len(imgs))\n","out_dir = tempfile.TemporaryDirectory()\n","out_path = out_dir.name\n","# test and show/save the images\n","for i, img in enumerate(imgs):\n","    result = inference_mot(mot_model, img, frame_id=i)\n","    mot_model.show_result(\n","            img,\n","            result,\n","            show=False,\n","            wait_time=int(1000. / imgs.fps),\n","            out_file=f'{out_path}/{i:06d}.jpg')\n","    prog_bar.update()\n","\n","output = './demo/mot.mp4'\n","print(f'\\n making the output video at {output} with a FPS of {imgs.fps}')\n","mmcv.frames2video(out_path, output, fps=imgs.fps, fourcc='mp4v')\n","out_dir.cleanup()"]},{"cell_type":"code","execution_count":null,"id":"d4a97033-b779-4169-84c9-781c58840ae5","metadata":{"id":"d4a97033-b779-4169-84c9-781c58840ae5","executionInfo":{"status":"aborted","timestamp":1673250044564,"user_tz":-540,"elapsed":22,"user":{"displayName":"리미누","userId":"10960127468446100835"}}},"outputs":[],"source":["# run vis demo\n","from mmtrack.apis import inference_mot\n","vis_config = './configs/vis/masktrack_rcnn/masktrack_rcnn_r50_fpn_12e_youtubevis2019.py'\n","vis_checkpoint = './checkpoints/masktrack_rcnn_r50_fpn_12e_youtubevis2019_20211022_194830-6ca6b91e.pth'\n","# build the model from a config file and a checkpoint file\n","vis_model = init_model(vis_config, vis_checkpoint, device='cuda:0')\n","imgs = mmcv.VideoReader(input_video)\n","prog_bar = mmcv.ProgressBar(len(imgs))\n","out_dir = tempfile.TemporaryDirectory()\n","out_path = out_dir.name\n","for i, img in enumerate(imgs):\n","    result = inference_mot(vis_model, img, frame_id=i)\n","    vis_model.show_result(\n","            img,\n","            result,\n","            wait_time=int(1000. / imgs.fps),\n","            out_file=f'{out_path}/{i:06d}.jpg')\n","    prog_bar.update()\n","output = './demo/vis.mp4'\n","print(f'\\n making the output video at {output} with a FPS of {imgs.fps}')\n","mmcv.frames2video(out_path, output, fps=imgs.fps, fourcc='mp4v')\n","out_dir.cleanup()"]},{"cell_type":"code","execution_count":null,"id":"abd0863b-933c-42d1-8442-70565d1b4b55","metadata":{"id":"abd0863b-933c-42d1-8442-70565d1b4b55","executionInfo":{"status":"aborted","timestamp":1673250044564,"user_tz":-540,"elapsed":22,"user":{"displayName":"리미누","userId":"10960127468446100835"}}},"outputs":[],"source":["# run vid demo\n","from mmtrack.apis import inference_vid\n","vid_config = './configs/vid/selsa/selsa_faster_rcnn_r50_dc5_1x_imagenetvid.py'\n","vid_checkpoint = './checkpoints/selsa_faster_rcnn_r50_dc5_1x_imagenetvid_20201227_204835-2f5a4952.pth'\n","# build the model from a config file and a checkpoint file\n","vid_model = init_model(vid_config, vid_checkpoint, device='cuda:0')\n","imgs = mmcv.VideoReader(input_video)\n","prog_bar = mmcv.ProgressBar(len(imgs))\n","out_dir = tempfile.TemporaryDirectory()\n","out_path = out_dir.name\n","for i, img in enumerate(imgs):\n","    result = inference_vid(vid_model, img, frame_id=i)\n","    vid_model.show_result(\n","            img,\n","            result,\n","            wait_time=int(1000. / imgs.fps),\n","            out_file=f'{out_path}/{i:06d}.jpg')\n","    prog_bar.update()\n","output = './demo/vid.mp4'\n","print(f'\\n making the output video at {output} with a FPS of {imgs.fps}')\n","mmcv.frames2video(out_path, output, fps=imgs.fps, fourcc='mp4v')\n","out_dir.cleanup()"]},{"cell_type":"code","execution_count":null,"id":"0189f86a-b216-4f63-a58a-97e40e326869","metadata":{"id":"0189f86a-b216-4f63-a58a-97e40e326869","executionInfo":{"status":"aborted","timestamp":1673250044565,"user_tz":-540,"elapsed":22,"user":{"displayName":"리미누","userId":"10960127468446100835"}}},"outputs":[],"source":["# run sot demo\n","from mmtrack.apis import inference_sot\n","sot_config = './configs/sot/siamese_rpn/siamese_rpn_r50_20e_lasot.py'\n","sot_checkpoint = './checkpoints/siamese_rpn_r50_1x_lasot_20211203_151612-da4b3c66.pth'\n","# build the model from a config file and a checkpoint file\n","sot_model = init_model(sot_config, sot_checkpoint, device='cuda:0')\n","init_bbox = [371, 411, 450, 646]\n","imgs = mmcv.VideoReader(input_video)\n","prog_bar = mmcv.ProgressBar(len(imgs))\n","out_dir = tempfile.TemporaryDirectory()\n","out_path = out_dir.name\n","for i, img in enumerate(imgs):\n","    result = inference_sot(sot_model, img, init_bbox, frame_id=i)\n","    sot_model.show_result(\n","            img,\n","            result,\n","            wait_time=int(1000. / imgs.fps),\n","            out_file=f'{out_path}/{i:06d}.jpg')\n","    prog_bar.update()\n","output = './demo/sot.mp4'\n","print(f'\\n making the output video at {output} with a FPS of {imgs.fps}')\n","mmcv.frames2video(out_path, output, fps=imgs.fps, fourcc='mp4v')\n","out_dir.cleanup()"]},{"cell_type":"markdown","id":"500ff07b-9664-4429-9e3f-e97dd4fa1c29","metadata":{"id":"500ff07b-9664-4429-9e3f-e97dd4fa1c29","tags":[]},"source":["## **Train a MOT model with a toy dataset**"]},{"cell_type":"markdown","id":"e7bd4f44-447a-49a5-8c9c-cf160691bda5","metadata":{"id":"e7bd4f44-447a-49a5-8c9c-cf160691bda5","tags":[]},"source":["### **Prepare dataset**"]},{"cell_type":"code","execution_count":null,"id":"a91a55bd-14be-46bf-aa18-5e30d9abe5b7","metadata":{"id":"a91a55bd-14be-46bf-aa18-5e30d9abe5b7","executionInfo":{"status":"aborted","timestamp":1673250044565,"user_tz":-540,"elapsed":22,"user":{"displayName":"리미누","userId":"10960127468446100835"}}},"outputs":[],"source":["!mkdir data\n","!wget https://download.openmmlab.com/mmtracking/data/MOT17_tiny.zip -P ./data\n","!unzip -q ./data/MOT17_tiny.zip -d ./data"]},{"cell_type":"code","execution_count":null,"id":"d0db0d5f-b192-48ee-b145-149f33ad3685","metadata":{"id":"d0db0d5f-b192-48ee-b145-149f33ad3685","executionInfo":{"status":"aborted","timestamp":1673250044565,"user_tz":-540,"elapsed":22,"user":{"displayName":"리미누","userId":"10960127468446100835"}}},"outputs":[],"source":["# convert the dataset to coco format\n","!python ./tools/convert_datasets/mot/mot2coco.py -i ./data/MOT17_tiny/ -o ./data/MOT17_tiny/annotations --split-train --convert-det\n","# crop pedestrian patches from the original dataset for training reid model. It may take a few minutes.\n","!rm -rf ./data/MOT17_tiny/reid\n","!python ./tools/convert_datasets/mot/mot2reid.py -i ./data/MOT17_tiny/ -o ./data/MOT17_tiny/reid --val-split 0.9 --vis-threshold 0.8"]},{"cell_type":"markdown","id":"ae887970-7382-4bd0-a739-6b07e6dded6f","metadata":{"id":"ae887970-7382-4bd0-a739-6b07e6dded6f","tags":[]},"source":["### **Train a detector for MOT**"]},{"cell_type":"code","execution_count":null,"id":"bce04095-8586-45c5-a556-40c51d08b2cb","metadata":{"id":"bce04095-8586-45c5-a556-40c51d08b2cb","executionInfo":{"status":"aborted","timestamp":1673250044565,"user_tz":-540,"elapsed":22,"user":{"displayName":"리미누","userId":"10960127468446100835"}}},"outputs":[],"source":["import mmcv\n","from mmdet.apis import set_random_seed\n","cfg = mmcv.Config.fromfile('./configs/det/faster-rcnn_r50_fpn_4e_mot17-half.py')\n","cfg.data_root = 'data/MOT17_tiny/'\n","cfg.data.test.ann_file = cfg.data.test.ann_file.replace('data/MOT17/','data/MOT17_tiny/')\n","cfg.data.train.ann_file = cfg.data.train.ann_file.replace('data/MOT17/','data/MOT17_tiny/')\n","cfg.data.val.ann_file = cfg.data.val.ann_file.replace('data/MOT17/','data/MOT17_tiny/')\n","\n","cfg.data.test.img_prefix = cfg.data.test.img_prefix.replace('data/MOT17/','data/MOT17_tiny/')\n","cfg.data.train.img_prefix = cfg.data.train.img_prefix.replace('data/MOT17/','data/MOT17_tiny/')\n","cfg.data.val.img_prefix = cfg.data.val.img_prefix.replace('data/MOT17/','data/MOT17_tiny/')\n","\n","cfg.work_dir = './tutorial_exps/detector'\n","cfg.seed = 0\n","set_random_seed(0, deterministic=False)\n","cfg.gpu_ids = range(1)\n","print(f'Config:\\n{cfg.pretty_text}')"]},{"cell_type":"code","execution_count":null,"id":"889b4255-50be-4da3-85c4-dcd19c8111ac","metadata":{"id":"889b4255-50be-4da3-85c4-dcd19c8111ac","executionInfo":{"status":"aborted","timestamp":1673250044565,"user_tz":-540,"elapsed":22,"user":{"displayName":"리미누","userId":"10960127468446100835"}}},"outputs":[],"source":["import os.path as osp\n","\n","from mmtrack.datasets import build_dataset\n","from mmdet.apis import train_detector as train_model\n","from mmdet.models import build_detector as build_model\n","\n","mmcv.mkdir_or_exist(osp.abspath(cfg.work_dir))\n","model = build_model(cfg.model.detector)\n","model.init_weights()\n","datasets = [build_dataset(cfg.data.train)]\n","model.CLASSES = datasets[0].CLASSES\n","train_model(model, datasets, cfg)"]},{"cell_type":"markdown","id":"7f747c1f-7944-49f2-b9fc-a51dc3f85857","metadata":{"id":"7f747c1f-7944-49f2-b9fc-a51dc3f85857","tags":[]},"source":["### **Train a ReID model for MOT**"]},{"cell_type":"code","execution_count":null,"id":"6705deeb-a9d7-42e2-9d52-b51b7b588d1f","metadata":{"id":"6705deeb-a9d7-42e2-9d52-b51b7b588d1f","executionInfo":{"status":"aborted","timestamp":1673250044566,"user_tz":-540,"elapsed":22,"user":{"displayName":"리미누","userId":"10960127468446100835"}}},"outputs":[],"source":["import mmcv\n","from mmdet.apis import set_random_seed\n","cfg = mmcv.Config.fromfile('./configs/reid/resnet50_b32x8_MOT17.py')\n","cfg.data_root = 'data/MOT17_tiny/'\n","cfg.data.test.ann_file = cfg.data.test.ann_file.replace('data/MOT17/','data/MOT17_tiny/')\n","cfg.data.train.ann_file = 'data/MOT17_tiny/reid/meta/train_9.txt'\n","cfg.data.val.ann_file = cfg.data.val.ann_file.replace('data/MOT17/','data/MOT17_tiny/')\n","\n","cfg.data.test.data_prefix = cfg.data.test.data_prefix.replace('data/MOT17/','data/MOT17_tiny/')\n","cfg.data.train.data_prefix = cfg.data.train.data_prefix.replace('data/MOT17/','data/MOT17_tiny/')\n","cfg.data.val.data_prefix = cfg.data.val.data_prefix.replace('data/MOT17/','data/MOT17_tiny/')\n","\n","# learning policy\n","cfg.lr_config = dict(\n","    policy='step',\n","    warmup='linear',\n","    warmup_iters=200,\n","    warmup_ratio=1.0 / 200,\n","    step=[1])\n","cfg.total_epochs = 2\n","\n","cfg.work_dir = './tutorial_exps/reid'\n","cfg.seed = 0\n","set_random_seed(0, deterministic=False)\n","cfg.gpu_ids = range(1)\n","print(f'Config:\\n{cfg.pretty_text}')"]},{"cell_type":"code","execution_count":null,"id":"12f2b54e-7e5f-4d95-9e27-528115717e03","metadata":{"id":"12f2b54e-7e5f-4d95-9e27-528115717e03","executionInfo":{"status":"aborted","timestamp":1673250044566,"user_tz":-540,"elapsed":21,"user":{"displayName":"리미누","userId":"10960127468446100835"}}},"outputs":[],"source":["from mmtrack.datasets import build_dataset\n","from mmdet.apis import train_detector as train_model\n","from mmtrack.models import build_reid as build_model\n","\n","\n","model = build_model(cfg.model.reid)\n","model.init_weights()\n","datasets = [build_dataset(cfg.data.train)]\n","model.CLASSES = datasets[0].CLASSES\n","\n","train_model(model, datasets, cfg)"]},{"cell_type":"markdown","id":"e5ac4b40-7023-498a-9ddf-bc06ff2100af","metadata":{"id":"e5ac4b40-7023-498a-9ddf-bc06ff2100af","tags":[]},"source":["### **Test the DeepSORT model**"]},{"cell_type":"code","execution_count":null,"id":"c837c657-cc81-426d-8060-ad19f5494461","metadata":{"id":"c837c657-cc81-426d-8060-ad19f5494461","executionInfo":{"status":"aborted","timestamp":1673250044566,"user_tz":-540,"elapsed":21,"user":{"displayName":"리미누","userId":"10960127468446100835"}}},"outputs":[],"source":["import mmcv\n","from mmdet.apis import set_random_seed\n","cfg = mmcv.Config.fromfile('./configs/mot/deepsort/deepsort_faster-rcnn_fpn_4e_mot17-private-half.py')\n","cfg.data_root = 'data/MOT17_tiny/'\n","cfg.data.test.ann_file = cfg.data.test.ann_file.replace('data/MOT17/','data/MOT17_tiny/')\n","cfg.data.train.ann_file = cfg.data.test.ann_file.replace('data/MOT17/','data/MOT17_tiny/')\n","cfg.data.val.ann_file = cfg.data.val.ann_file.replace('data/MOT17/','data/MOT17_tiny/')\n","\n","cfg.data.test.img_prefix = cfg.data.test.img_prefix.replace('data/MOT17/','data/MOT17_tiny/')\n","cfg.data.train.img_prefix = cfg.data.train.img_prefix.replace('data/MOT17/','data/MOT17_tiny/')\n","cfg.data.val.img_prefix = cfg.data.val.img_prefix.replace('data/MOT17/','data/MOT17_tiny/')\n","\n","cfg.model.detector.init_cfg.checkpoint = './tutorial_exps/detector/epoch_4.pth'\n","cfg.model.reid.init_cfg.checkpoint = './tutorial_exps/reid/epoch_2.pth'\n","\n","cfg.work_dir = './tutorial_exps'\n","cfg.seed = 0\n","set_random_seed(0, deterministic=False)\n","cfg.gpu_ids = range(1)\n","cfg.data.test.test_mode = True\n","print(f'Config:\\n{cfg.pretty_text}')"]},{"cell_type":"code","execution_count":null,"id":"29c9f531-3ea9-42d3-9fb3-bcdd13594406","metadata":{"id":"29c9f531-3ea9-42d3-9fb3-bcdd13594406","executionInfo":{"status":"aborted","timestamp":1673250044566,"user_tz":-540,"elapsed":21,"user":{"displayName":"리미누","userId":"10960127468446100835"}}},"outputs":[],"source":["from mmtrack.datasets import build_dataloader\n","from mmtrack.apis import init_model\n","from mmcv.parallel import MMDataParallel\n","from mmtrack.apis import single_gpu_test\n","from mmtrack.datasets import build_dataset\n","\n","dataset = build_dataset(cfg.data.test)\n","data_loader = build_dataloader(\n","    dataset,\n","    samples_per_gpu=1,\n","    workers_per_gpu=cfg.data.workers_per_gpu,\n","    dist=False,\n","    shuffle=False)\n","\n","# build the model and load checkpoint\n","model = init_model(cfg)\n","\n","model = MMDataParallel(model, device_ids=cfg.gpu_ids)\n","outputs = single_gpu_test(model, data_loader)\n","\n","eval_kwargs = cfg.get('evaluation', {}).copy()\n","# hard-code way to remove EvalHook args\n","eval_hook_args = [\n","    'interval', 'tmpdir', 'start', 'gpu_collect', 'save_best',\n","    'rule', 'by_epoch'\n","]\n","for key in eval_hook_args:\n","    eval_kwargs.pop(key, None)\n","eval_kwargs.update(dict(metric=['track']))\n","metric = dataset.evaluate(outputs, **eval_kwargs)\n","print(metric)"]}],"metadata":{"accelerator":"GPU","colab":{"provenance":[{"file_id":"https://github.com/open-mmlab/mmtracking/blob/master/demo/MMTracking_Tutorial.ipynb","timestamp":1672966785777}]},"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.0"}},"nbformat":4,"nbformat_minor":5}